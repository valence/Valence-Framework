McFly Example:  mcfly_test_obd
--------------------------------
The example here is a brief usage of the McFly API to query for speed using an
ELM327 device.

Build
-----
1) Your compiler needs to know about the locations of the libmcfly headers,
   which is what the gcc argument '-I' is for.

2) Your compiler will need to also know about where the built shared libraries
are, which is what the '-L' argument is for.  Also, you must specify the
library name, when using the libmcfly library.  Therefore also add the
'-lmcfly' to you compilation arguments. 

                 'gcc -o mcfly_test_obd mcfly_test_obd.c            \
                       -Ipath_to_directory_conaining_mcfly_includes \
                       -Lpath_to_directory_containing_libmcfly      \
                       -lmcfly

Running
-------
1) Your linker must know about the location of the libmcfly library.  You
should be able to point your shell to that directory via the environmental
variable that the linker checks for libraries, 'LD_LIBRARY_PATH'.  In bash, to
set this environmental variable, simply run:
         'export LD_LIBRARY_PATH=path_to_directory_containing_libmcfly'

2) With that variable set, you should now be able to successfully execute the
binary.
